// TODO: WIP - don't use yet
apply plugin: 'maven'

group = 'org.javasimon'

repositories {
	mavenCentral()
}

def getBootstrapPath(jdkVersion) {

    switch (jdkVersion) {
        case "1.6":
            return System.getenv('JDK6.HOME') + '/jre/lib/rt.jar;' + System.getenv('JDK6.HOME') + '/jre/lib/jce.jar';
            break;
        case "1.7":
            return System.getenv('JDK7.HOME') + '/jre/lib/rt.jar;' + System.getenv('JDK7.HOME') + '/jre/lib/jce.jar'
            break;
        default:
            throw new GradleException("Unknown jdk version: " + jdkVersion)
    }
}

ext.libs = [
    spring_core:    'org.springframework:spring-core:3.2.0.RELEASE',
	spring_aop:     'org.springframework:spring-aop:3.2.0.RELEASE',
	spring_jdbc:    'org.springframework:spring-jdbc:3.2.0.RELEASE',
	spring_mvc:     'org.springframework:spring-webmvc:3.2.0.RELEASE',
	spring_test:    'org.springframework:spring-test:3.2.0.RELEASE',
	
	javaee_api:     'javax:javaee-api:6.0',
    mockito:        'org.mockito:mockito-core:1.9.0',
    h2:             'com.h2database:h2:1.3.168',
    test_ng:        'org.testng:testng:6.5.2'
]

subprojects {
	apply plugin: 'java'
    apply plugin: 'jacoco'

	repositories {
		mavenCentral()
	}

	dependencies {
		testCompile libs.test_ng
		testCompile libs.mockito
		testCompile libs.spring_test
	}

	version = '3.4.0-SNAPSHOT'

    sourceCompatibility = '1.6'
    targetCompatibility = '1.6'

    compileJava {
        options.compilerArgs << '-bootclasspath' << getBootstrapPath("1.6")
        options.fork = true
        options.forkOptions.executable = 'javac'
    }

    jar {
		manifest.attributes provider: 'gradle'
	}

	test {
		useTestNG()
	}
}